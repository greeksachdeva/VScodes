{"title":{"en":"A. Make Even","ru":"A. Сделай чётное"},"contestId":"1611","problemIndex":"A","timeLimit":{"en":"1 second","ru":"1 секунда"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Polycarp has an integer $$$n$$$ that doesn't contain the digit <span class=\"tex-font-style-tt\">0</span>. He can do the following operation with his number several (possibly zero) times:</p><ul><li> Reverse the prefix of length $$$l$$$ (in other words, $$$l$$$ leftmost digits) of $$$n$$$. So, the leftmost digit is swapped with the $$$l$$$-th digit from the left, the second digit from the left swapped with ($$$l-1$$$)-th left, etc. For example, if $$$n=123456789$$$ and $$$l=5$$$, then the new value of $$$n$$$ will be $$$543216789$$$.</li></ul><p>Note that for different operations, the values of $$$l$$$ can be different. The number $$$l$$$ can be equal to the length of the number $$$n$$$&nbsp;— in this case, the whole number $$$n$$$ is reversed.</p><p>Polycarp loves even numbers. Therefore, he wants to make his number even. At the same time, Polycarp is very impatient. He wants to do as few operations as possible.</p><p>Help Polycarp. Determine the minimum number of operations he needs to perform with the number $$$n$$$ to make it even or determine that this is impossible.</p><p>You need to answer $$$t$$$ independent test cases.</p>","ru":"<p>У Поликарпа есть целое число $$$n$$$, которое не содержит цифр '<span class=\"tex-font-style-tt\">0</span>'. С этим числом он может делать следующую операцию несколько (возможно, ноль) раз:</p><ul><li> Взять префикс длины $$$l$$$ (иными словами, левые $$$l$$$ цифр) числа $$$n$$$ и развернуть его. Так, самая левая цифра меняется местами с $$$l$$$-й цифрой слева, вторая цифра слева меняется местами с ($$$l-1$$$)-й слева и т.д. Например, если $$$n=123456789$$$ и $$$l=5$$$, то новое значение $$$n$$$ будет равно $$$543216789$$$.</li></ul><p>Обратите внимание, что для разных операций значения $$$l$$$ могут быть разными. Допустимо, что число $$$l$$$ равно длине числа $$$n$$$&nbsp;— в таком случае происходит переворот всего числа $$$n$$$.</p><p>Поликарп любит чётные числа. Поэтому он хочет сделать так, чтобы его число было чётным. При этом, Поликарп очень нетерпелив. Он хочет, чтобы было сделано как можно меньшее количество операций.</p><p>Помогите Поликарпу. Определите минимальное количество операций, которые ему необходимо совершить с числом $$$n$$$, чтобы сделать его чётным, или определите, что это невозможно.</p><p>Вам необходимо ответить на $$$t$$$ независимых наборов входных данных.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains the number $$$t$$$ ($$$1 \\le t \\le 10^4$$$)&nbsp;— the number of test cases.</p><p>Each of the following $$$t$$$ lines contains one integer $$$n$$$ ($$$1 \\le n &lt; 10^9$$$). It is guaranteed that the given number doesn't contain the digit <span class=\"tex-font-style-tt\">0</span>.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке дано число $$$t$$$ ($$$1 \\le t \\le 10^4$$$) — количество наборов входных данных.</p><p>В следующих $$$t$$$ строках записано по одному целому числу $$$n$$$ ($$$1 \\le n &lt; 10^9$$$). Гарантируется, что данное число не содержит в своей записи цифр '<span class=\"tex-font-style-tt\">0</span>'.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Print $$$t$$$ lines. On each line print one integer&nbsp;— the answer to the corresponding test case. If it is impossible to make an even number, print <span class=\"tex-font-style-tt\">-1</span>.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Выведите $$$t$$$ строк. В каждой строке выведите одно целое число&nbsp;— ответ на соответствующий набор входных данных. Если сделать число чётным невозможно, выведите <span class=\"tex-font-style-tt\">-1</span>.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first test case, $$$n=3876$$$, which is already an even number. Polycarp doesn't need to do anything, so the answer is $$$0$$$.</p><p>In the second test case, $$$n=387$$$. Polycarp needs to do $$$2$$$ operations:</p><ol><li> Select $$$l=2$$$ and reverse the prefix $$$\\underline{38}7$$$. The number $$$n$$$ becomes $$$837$$$. This number is odd.</li><li> Select $$$l=3$$$ and reverse the prefix $$$\\underline{837}$$$. The number $$$n$$$ becomes $$$738$$$. This number is even.</li></ol><p>It can be shown that $$$2$$$ is the minimum possible number of operations that Polycarp needs to do with his number to make it even.</p><p>In the third test case, $$$n=4489$$$. Polycarp can reverse the whole number (choose a prefix of length $$$l=4$$$). It will become $$$9844$$$ and this is an even number.</p><p>In the fourth test case, $$$n=3$$$. No matter how hard Polycarp tried, he would not be able to make an even number.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом наборе входных данных $$$n=3876$$$, что уже является чётным числом. Поликарпу ничего не нужно делать, поэтому ответ $$$0$$$.</p><p>Во втором наборе входных данных $$$n=387$$$. Поликарпу необходимо сделать $$$2$$$ операции:</p><ol><li> Выбрать $$$l=2$$$ и развернуть префикс $$$\\underline{38}7$$$. Число $$$n$$$ станет равным $$$837$$$. Это число нечётное.</li><li> Выбрать $$$l=3$$$ и развернуть префикс $$$\\underline{837}$$$. Число $$$n$$$ станет равным $$$738$$$. Это число чётное.</li></ol><p>Можно показать, что $$$2$$$ — это минимально возможное количество операций, которое необходимо сделать Поликарпу для того, чтобы его число стало чётным.</p><p>В третьем наборе входных данных $$$n=4489$$$. Здесь Поликарп может развернуть всё число целиком (выбрать префикс длины $$$l=4$$$). Оно станет равным $$$9844$$$ и это чётное число. </p><p>В четвёртом тестовом примере $$$n=3$$$. Как бы Поликарп ни старался, но сделать чётное число у него не получится.</p>"},"sampleTestcases":[{"id":1637862591357,"input":"4\n3876\n387\n4489\n3\n","output":"0\n2\n1\n-1\n"}],"submitUrl":"https://codeforces.com/contest/1611/submit","language":"c++"}