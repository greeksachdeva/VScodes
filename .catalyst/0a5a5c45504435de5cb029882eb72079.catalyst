{"title":{"en":"B. Avoid Local Maximums","ru":"B. Избегайте локальных максимумов"},"contestId":"1635","problemIndex":"B","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>You are given an array $$$a$$$ of size $$$n$$$. Each element in this array is an integer between $$$1$$$ and $$$10^9$$$.</p><p>You can perform several operations to this array. During an operation, you can replace an element in the array with any integer between $$$1$$$ and $$$10^9$$$. </p><p>Output the minimum number of operations needed such that the resulting array doesn't contain any local maximums, and the resulting array after the operations.</p><p>An element $$$a_i$$$ is a local maximum if it is strictly larger than both of its neighbors (that is, $$$a_i &gt; a_{i - 1}$$$ and $$$a_i &gt; a_{i + 1}$$$). Since $$$a_1$$$ and $$$a_n$$$ have only one neighbor each, they will never be a local maximum.</p>","ru":"<p>Вам дан массив $$$a$$$ размера $$$n$$$. Каждый элемент этого массива представляет собой целое число от $$$1$$$ до $$$10^9$$$.</p><p>Вы можете выполнить несколько операций с этим массивом. Во время операции вы можете заменить элемент массива любым целым числом от $$$1$$$ до $$$10^9$$$.</p><p>Выведите минимальное количество необходимых операций, чтобы результирующий массив не содержал локальных максимумов, и результирующий массив после операций.</p><p>Элемент $$$a_i$$$ является локальным максимумом, если он строго больше обоих своих соседей (то есть $$$a_i &gt; a_{i - 1}$$$ и $$$a_i &gt; a_{i + 1}$$$). Поскольку $$$a_1$$$ и $$$a_n$$$ имеют только по одному соседу, они никогда не будут локальным максимумом.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>Each test contains multiple test cases. The first line will contain a single integer $$$t$$$ $$$(1 \\leq t \\leq 10000)$$$ — the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of each test case contains a single integer $$$n$$$ $$$(2 \\leq n \\leq 2 \\cdot 10^5)$$$ — the size of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots ,a_n$$$ $$$(1 \\leq a_i \\leq 10^9)$$$, the elements of array.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>Каждый тест содержит несколько тестовых случаев. Первая строка будет содержать единственное целое число $$$t$$$ $$$(1 \\leq t \\leq 10000)$$$ — количество тестов. Затем следуют $$$t$$$ тестовых случаев.</p><p>Первая строка каждого теста содержит одно целое число $$$n$$$ $$$(2 \\leq n \\leq 2 \\cdot 10^5)$$$ — размер массива $$$a$$$.</p><p>Вторая строка каждого набора входных данных содержит $$$n$$$ целых чисел $$$a_1, a_2, \\ldots ,a_n$$$ $$$(1 \\leq a_i \\leq 10^9)$$$ — элементы массива.</p><p>Гарантируется, что сумма $$$n$$$ по всем наборам входных данных не превосходит $$$2 \\cdot 10^5$$$.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>For each test case, first output a line containing a single integer $$$m$$$ — minimum number of operations required. Then ouput a line consist of $$$n$$$ integers — the resulting array after the operations. Note that this array should differ in exactly $$$m$$$ elements from the initial array.</p><p>If there are multiple answers, print any.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Для каждого набора входных данных сначала выведите строку, содержащую одно целое число $$$m$$$ — минимальное количество требуемых операций. Затем выведите строку, состоящую из $$$n$$$ целых чисел — результирующий массив после операций. Обратите внимание, что этот массив должен отличаться ровно на $$$m$$$ элементов от исходного массива.</p><p>Если ответов несколько, выведите любой.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first example, the array contains no local maximum, so we don't need to perform operations.</p><p>In the second example, we can change $$$a_2$$$ to $$$3$$$, then the array don't have local maximums.</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом примере массив не содержит локального максимума, поэтому нам не нужно выполнять операции.</p><p>Во втором примере мы можем изменить $$$a_2$$$ на $$$3$$$, тогда у массива не будет локальных максимумов.</p>"},"sampleTestcases":[{"id":1645370770996,"input":"5\n3\n2 1 2\n4\n1 2 3 1\n5\n1 2 1 2 1\n9\n1 2 1 3 2 3 1 2 1\n9\n2 1 3 1 3 1 3 1 3\n","output":"0\n2 1 2\n1\n1 3 3 1\n1\n1 2 2 2 1\n2\n1 2 3 3 2 3 3 2 1\n2\n2 1 3 3 3 1 1 1 3\n","result":{"id":1645370770996,"stdout":"0\r\n2 1 2 \r\n1\r\n1 2 3 3 \r\n1\r\n1 2 2 2 1 \r\n2\r\n1 2 3 3 2 3 3 2 1 \r\n2\r\n2 1 3 3 3 1 3 3 3 \r\n","stderr":"","exitcode":0,"signal":null,"time":44,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1635/submit","language":"c++"}