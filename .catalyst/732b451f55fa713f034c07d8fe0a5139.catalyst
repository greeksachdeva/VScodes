{"title":"A. Regular Bracket Sequences","contestId":"1574","problemIndex":"A","timeLimit":"2 seconds","memLimit":"512 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>A bracket sequence is a string containing only characters &quot;<span class=\"tex-font-style-tt\">(</span>&quot; and &quot;<span class=\"tex-font-style-tt\">)</span>&quot;. A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters &quot;<span class=\"tex-font-style-tt\">1</span>&quot; and &quot;<span class=\"tex-font-style-tt\">+</span>&quot; between the original characters of the sequence. For example, bracket sequences &quot;<span class=\"tex-font-style-tt\">()()</span>&quot; and &quot;<span class=\"tex-font-style-tt\">(())</span>&quot; are regular (the resulting expressions are: &quot;<span class=\"tex-font-style-tt\">(1)+(1)</span>&quot; and &quot;<span class=\"tex-font-style-tt\">((1+1)+1)</span>&quot;), and &quot;<span class=\"tex-font-style-tt\">)(</span>&quot;, &quot;<span class=\"tex-font-style-tt\">(</span>&quot; and &quot;<span class=\"tex-font-style-tt\">)</span>&quot; are not.</p><p>You are given an integer $$$n$$$. Your goal is to construct and print <span class=\"tex-font-style-bf\">exactly $$$n$$$</span> different regular bracket sequences of length $$$2n$$$.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 50$$$) &#x2014; the number of test cases.</p><p>Each test case consists of one line containing one integer $$$n$$$ ($$$1 \\le n \\le 50$$$).</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, print $$$n$$$ lines, each containing a regular bracket sequence of length <span class=\"tex-font-style-bf\">exactly $$$2n$$$</span>. All bracket sequences you output for a testcase should be different (though they may repeat in different test cases). If there are multiple answers, print any of them. It can be shown that it&apos;s always possible.</p>","noteHtml":null,"sampleTestcases":[{"id":1632148534426,"input":"3\n3\n1\n3\n","output":"()()()\n((()))\n(()())\n()\n((()))\n(())()\n()(())\n","result":{"id":1632148534426,"stdout":"()()()\r\n()(())\r\n(())()\r\n()\r\n()()()\r\n()(())\r\n(())()\r\n","stderr":"","exitcode":0,"signal":null,"time":37,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1574/submit","language":"c++"}