{"title":{"en":"B. Effective Approach","ru":"B. Эффективный подход"},"contestId":"227","problemIndex":"B","timeLimit":{"en":"2 seconds","ru":"2 секунды"},"memLimit":{"en":"256 megabytes","ru":"256 мегабайт"},"inputFormat":{"en":"standard input","ru":"стандартный ввод"},"outputFormat":{"en":"standard output","ru":"стандартный вывод"},"problemHtml":{"en":"<p>Once at a team training Vasya, Petya and Sasha got a problem on implementing linear search in an array.</p><p>According to the boys, linear search works as follows. The array elements in a pre-selected order are in turn compared with the number that you need to find. Once you find the array element that is equal to the required one, the search ends. The efficiency of the algorithm is the number of performed comparisons. The fewer comparisons the linear search has made, the more effective it is.</p><p>Vasya believes that a linear search would work better if it sequentially iterates through the elements, starting with the <span class=\"tex-span\">1</span>-st one (in this problem we consider the elements of the array indexed from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>) and ending with the <span class=\"tex-span\"><i>n</i></span>-th one. And Petya says that Vasya is wrong: the search will need less comparisons if it sequentially iterates the elements starting from the <span class=\"tex-span\"><i>n</i></span>-th and ending with the <span class=\"tex-span\">1</span>-st one. Sasha argues that the two approaches are equivalent.</p><p>To finally begin the task, the teammates decided to settle the debate and compare the two approaches on an example. For this, they took an array that is a permutation of integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>, and generated <span class=\"tex-span\"><i>m</i></span> queries of the form: find element with value <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> in the array. They want to calculate for both approaches how many comparisons in total the linear search will need to respond to all queries. If the first search needs fewer comparisons, then the winner of the dispute is Vasya. If the second one does, then the winner is Petya. If both approaches make the same number of comparisons, then Sasha's got the upper hand.</p><p>But the problem is, linear search is too slow. That's why the boys aren't going to find out who is right before the end of the training, unless you come in here. Help them to determine who will win the dispute.</p>","ru":"<p>Однажды на командной тренировке Васе, Пете и Саше досталась задача, в которой нужно было реализовать линейный поиск в массиве. </p><p>Линейный поиск, по мнению мальчиков, работает следующим образом. В заранее выбранном порядке элементы массива поочередно сравниваются с числом, которое требуется найти. Как только найден элемент массива, равный искомому, поиск завершается. Эффективностью алгоритма считается количество совершенных сравнений. Чем меньше линейный поиск совершил сравнений, тем он эффективнее.</p><p>Вася убежден, что линейный поиск будет работать эффективнее, если последовательно перебирать элементы, начиная с <span class=\"tex-span\">1</span>-го (в задаче считается, что элементы массива проиндексированы от <span class=\"tex-span\">1</span> до <span class=\"tex-span\"><i>n</i></span>) и заканчивая <span class=\"tex-span\"><i>n</i></span>-м. А Петя говорит, что Вася неправ: меньше сравнений понадобится, если перебирать последовательно элементы, начиная с <span class=\"tex-span\"><i>n</i></span>-го и заканчивая <span class=\"tex-span\">1</span>-м. Саша утверждает, что оба подхода равноценны.</p><p>Чтобы наконец приступить к задаче, сокомандники решили положить конец спорам, сравнив два подхода на примере. Для этого они взяли массив, являющийся перестановкой целых чисел от <span class=\"tex-span\">1</span> до <span class=\"tex-span\"><i>n</i></span>, а также сгенерировали <span class=\"tex-span\"><i>m</i></span> запросов вида: найти в массиве элемент со значением <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>. Они хотят для обоих подходов посчитать, сколько сравнений суммарно понадобится линейному поиску, чтобы ответить на все запросы. Если меньше сравнений понадобится сделать первому подходу, то победителем в споре будет считаться Вася. Если второму — Петя. Если же оба подхода выполнят одинаковое количество сравнений, верх в споре одержит Саша.</p><p>Но вот незадача: линейный поиск работает слишком медленно. Поэтому до конца тренировки мальчики так и не узнают, кто же был прав, если не вмешаться вовремя. Помогите ребятам определить, кто победит в споре.</p>"},"inSpecsHtml":{"en":"<div class=\"section-title\">Input</div><p>The first line contains integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1 ≤ <i>n</i> ≤ 10<sup class=\"upper-index\">5</sup>)</span> — the number of elements in the array. The second line contains <span class=\"tex-span\"><i>n</i></span> distinct space-separated integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>, <i>a</i><sub class=\"lower-index\">2</sub>, ..., <i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1 ≤ <i>a</i><sub class=\"lower-index\"><i>i</i></sub> ≤ <i>n</i>)</span> — the elements of array. </p><p>The third line contains integer <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1 ≤ <i>m</i> ≤ 10<sup class=\"upper-index\">5</sup>)</span> — the number of queries. The last line contains <span class=\"tex-span\"><i>m</i></span> space-separated integers <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>, <i>b</i><sub class=\"lower-index\">2</sub>, ..., <i>b</i><sub class=\"lower-index\"><i>m</i></sub></span> <span class=\"tex-span\">(1 ≤ <i>b</i><sub class=\"lower-index\"><i>i</i></sub> ≤ <i>n</i>)</span> — the search queries. Note that the queries can repeat.</p>","ru":"<div class=\"section-title\">Входные данные</div><p>В первой строке записано целое число <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(1 ≤ <i>n</i> ≤ 10<sup class=\"upper-index\">5</sup>)</span> — количество элементов в массиве. Во второй строке записаны <span class=\"tex-span\"><i>n</i></span> различных целых чисел через пробел <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>, <i>a</i><sub class=\"lower-index\">2</sub>, ..., <i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1 ≤ <i>a</i><sub class=\"lower-index\"><i>i</i></sub> ≤ <i>n</i>)</span> — элементы массива. </p><p>В третьей строке записано целое число <span class=\"tex-span\"><i>m</i></span> <span class=\"tex-span\">(1 ≤ <i>m</i> ≤ 10<sup class=\"upper-index\">5</sup>)</span> — количество запросов. В последней строке записаны <span class=\"tex-span\"><i>m</i></span> целых чисел через пробел <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\">1</sub>, <i>b</i><sub class=\"lower-index\">2</sub>, ..., <i>b</i><sub class=\"lower-index\"><i>m</i></sub></span> <span class=\"tex-span\">(1 ≤ <i>b</i><sub class=\"lower-index\"><i>i</i></sub> ≤ <i>n</i>)</span> — запросы на поиск. Обратите внимание, запросы могут повторяться.</p>"},"outSpecsHtml":{"en":"<div class=\"section-title\">Output</div><p>Print two integers, showing how many comparisons Vasya's approach needs and how many comparisons Petya's approach needs. Separate the numbers by spaces.</p><p>Please, do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in С++. It is preferred to use <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>","ru":"<div class=\"section-title\">Выходные данные</div><p>Выведите два целых числа: сколько сравнений понадобится Васиному подходу, а сколько — Петиному. Числа разделяйте пробельными символами.</p><p>Пожалуйста, не используйте спецификатор <span class=\"tex-font-style-tt\">%lld</span> для чтения или записи 64-х битовых чисел на С++. Рекомендуется использовать потоки <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> или спецификатор <span class=\"tex-font-style-tt\">%I64d</span>.</p>"},"noteHtml":{"en":"<div class=\"section-title\">Note</div><p>In the first sample Vasya's approach will make one comparison (it starts with the <span class=\"tex-span\">1</span>-st element and immediately finds the required number), and Petya's approach makes two comparisons (first he compares with the <span class=\"tex-span\">2</span>-nd array element, doesn't find the search item and compares with the <span class=\"tex-span\">1</span>-st element).</p><p>In the second sample, on the contrary, Vasya's approach will need two comparisons (first with <span class=\"tex-span\">1</span>-st element, and then with the <span class=\"tex-span\">2</span>-nd), and Petya's approach will find the required value in one comparison (the first comparison with the <span class=\"tex-span\">2</span>-nd element).</p>","ru":"<div class=\"section-title\">Примечание</div><p>В первом примере Васин подход совершит одно сравнение (он начинает с <span class=\"tex-span\">1</span>-го элемента и сразу же находит требуемое число), а Петин — два (сначала он производит сравнение со <span class=\"tex-span\">2</span>-м элементом массива, а затем, поскольку в ходе первого сравнения искомый элемент не найден, с <span class=\"tex-span\">1</span>-м).</p><p>Во втором примере, наоборот, Васиному подходу понадобится два сравнения (сначала с <span class=\"tex-span\">1</span>-м элементом, а затем со <span class=\"tex-span\">2</span>-м), а Петин найдет искомое значение за одно сравнение (сразу же со <span class=\"tex-span\">2</span>-м элементом).</p>"},"sampleTestcases":[{"id":1634737852849,"input":"2\n1 2\n1\n1\n","output":"1 2\n","result":{"id":1634737852849,"stdout":"1 2","stderr":"","exitcode":0,"signal":null,"time":139,"timeout":false}},{"id":1634737852850,"input":"2\n2 1\n1\n1\n","output":"2 1\n","result":{"id":1634737852850,"stdout":"2 1","stderr":"","exitcode":0,"signal":null,"time":33,"timeout":false}},{"id":1634737852851,"input":"3\n3 1 2\n3\n1 2 3\n","output":"6 6\n","result":{"id":1634737852851,"stdout":"6 6","stderr":"","exitcode":0,"signal":null,"time":35,"timeout":false}}],"submitUrl":"https://codeforces.com/problemset/submit","language":"c++","langId":"54"}